name: 'APIOps - From Validation to Portal / Marketplace'
on:
  workflow_call:
    inputs:
      spec-file:
        required: true
        type: string
      api-product-name:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: ${{ inputs.spec-file }} 

    - name: Rename the API Definition
      run: mv ${{ inputs.spec-file }} ${{ inputs.api-product-name }}-unbundled.yaml

    - name: Install Redocly CLI
      run: npm install -g @redocly/cli

    - name: redocly bundle
      run: redocly bundle ${{ inputs.api-product-name }}-unbundled.yaml --output ./${{ inputs.api-product-name }}.yaml
    
    - name: Install Vacuum CLI
      run: npm install -g @quobix/vacuum
      
    - name: Run Vacuum CLI for linting
      run: vacuum lint ${{ inputs.api-product-name }}.yaml -d
   
    - name: Archive bundled API Definition
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.api-product-name }}
        path: ${{ inputs.api-product-name }}.yaml
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: deploy-api-definition.sh
      - name: Download the bundled API Definition
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.api-product-name }}

      - name: Deploy API Definition
        run: sh ./deploy-api-definition.sh


  contract-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download the bundled API Definition
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.api-product-name }}
      - name: Run Portman tests
        run: npx @apideck/portman --local ${{ inputs.api-product-name }}.yaml --runNewman --output ${{ inputs.api-product-name }}.postman_collection.json
      - name: Upload Postman collection
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.api-product-name }}-postman-collection
          path: ${{ inputs.api-product-name }}.postman_collection.json

  load-test:
    needs: contract-test
    runs-on: ubuntu-latest
    steps:
      - name: Download Postman collection
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.api-product-name }}-postman-collection
      - name: Convert Postman Collection to k6 script
        run: |
              npx postman-to-k6 ${{ inputs.api-product-name }}.postman_collection.json -o k6-script.js
      - name: Setup k6
        run: |
             sudo gpg -k
             sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
             echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
             sudo apt-get update
             sudo apt-get install k6
      
      - name: Run k6 Load Test
        run: |
              k6 run ./k6-script.js
  
  deploy-to-pam:
    needs: load-test
    runs-on: ubuntu-latest
    steps:
    - name: Download the bundled API Definition
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.api-product-name }}
    - name: Deploy to API Portal/Marketplace
      run: |
        # The command to deploy the API to the Portal or Marketplace
        # will depend on the specific platform being used